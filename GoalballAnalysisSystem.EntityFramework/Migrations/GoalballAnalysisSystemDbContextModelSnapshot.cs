// <auto-generated />
using System;
using GoalballAnalysisSystem.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoalballAnalysisSystem.EntityFramework.Migrations
{
    [DbContext(typeof(GoalballAnalysisSystemDbContext))]
    partial class GoalballAnalysisSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Team1")
                        .HasColumnType("int");

                    b.Property<int?>("Team2")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Team1");

                    b.HasIndex("Team2");

                    b.HasIndex("User");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.GamePlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Game")
                        .HasColumnType("int");

                    b.Property<int>("Player")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Game");

                    b.HasIndex("Team", "Player");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.PlayerRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlayerRoles");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.TeamPlayer", b =>
                {
                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<int>("Player")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("Team", "Player")
                        .HasName("pk_team_player");

                    b.HasIndex("Player");

                    b.HasIndex("Role");

                    b.ToTable("TeamPlayers");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Throw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Game")
                        .HasColumnType("int");

                    b.Property<int?>("GamePlayer")
                        .HasColumnType("int");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("Y1")
                        .HasColumnType("int");

                    b.Property<int>("Y2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Game");

                    b.HasIndex("GamePlayer");

                    b.ToTable("Throws");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionExpire")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Standard user"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Premium user"
                        });
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Game", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Team", "Team1Navigation")
                        .WithMany("Games1")
                        .HasForeignKey("Team1")
                        .HasConstraintName("fkc_game_team1");

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Team", "Team2Navigation")
                        .WithMany("Games2")
                        .HasForeignKey("Team2")
                        .HasConstraintName("fkc_game_team2");

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.User", "UserNavigation")
                        .WithMany("Games")
                        .HasForeignKey("User")
                        .HasConstraintName("fkc_game_user")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.GamePlayer", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Game", "GameNavigation")
                        .WithMany("GamePlayers")
                        .HasForeignKey("Game")
                        .HasConstraintName("fkc_gameplayer_game")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.TeamPlayer", "TeamPlayerNavigation")
                        .WithMany("GamePlayers")
                        .HasForeignKey("Team", "Player")
                        .HasConstraintName("fkc_gameplayer_teamplayer")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Player", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.User", "UserNavigation")
                        .WithMany("Players")
                        .HasForeignKey("User")
                        .HasConstraintName("fkc_player_user")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Team", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.User", "UserNavigation")
                        .WithMany("Teams")
                        .HasForeignKey("User")
                        .HasConstraintName("fkc_team_user")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.TeamPlayer", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Player", "PlayerNavigation")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("Player")
                        .HasConstraintName("fkc_teamplayer_player")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.PlayerRole", "RoleNavigation")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("Role")
                        .HasConstraintName("fkc_player_role");

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Team", "TeamNavigation")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("Team")
                        .HasConstraintName("fkc_teamplayer_team")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.Throw", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.Game", "GameNavigation")
                        .WithMany("Throws")
                        .HasForeignKey("Game")
                        .HasConstraintName("fkc_throw_game")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("GoalballAnalysisSystem.Domain.Models.GamePlayer", "GamePlayerNavigation")
                        .WithMany("Throws")
                        .HasForeignKey("GamePlayer")
                        .HasConstraintName("fkc_throw_player");
                });

            modelBuilder.Entity("GoalballAnalysisSystem.Domain.Models.User", b =>
                {
                    b.HasOne("GoalballAnalysisSystem.Domain.Models.UserRole", "RoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Role")
                        .HasConstraintName("fkc_user_role")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
