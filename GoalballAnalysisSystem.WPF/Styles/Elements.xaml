<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="BorderElement" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource SecondBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect  Color="#edf1f7"
                                   BlurRadius="2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Text block styles-->
    <Style x:Key="HeaderOneText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="33"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="HeaderTwoText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="HeaderTwoBoldText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="HeaderThreeText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontWeight" Value="18"/>
    </Style>

    <Style x:Key="RegularText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--Text box styles-->

    <Style x:Key="HeaderTwoTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource SecondBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderThreeTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontWeight" Value="18"/>
    </Style>

    <Style x:Key="HeaderThreeTextBoxEditable" TargetType="TextBox">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontWeight" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource SecondBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RegularTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Monospace"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>


    <Style x:Key="BigButtonElement" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DarkButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransparentButtonElement" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderBrush="Transparent" 
                        Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkerStackPanel" TargetType="StackPanel">
        <!--<Setter Property="Background" Value="{StaticResource SecondBackgroundBrush}"/>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#edebe1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" Value="{StaticResource SecondBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LighterStackPanel" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource FirstBackgroundBrush}"/>
        <Style.Triggers>
        </Style.Triggers>    
    </Style>


    <Style x:Key="ToggleButtonEdit" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource DarkButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightButtonBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="ToggleButton.Content" Value="Done"></Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
                <Setter Property="ToggleButton.Content" Value="Edit"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonCreate" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource DarkButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightButtonBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="ToggleButton.Content" Value="Done"></Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
                <Setter Property="ToggleButton.Content" Value="Create"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>